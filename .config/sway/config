# Read `man 5 sway` for a complete reference.

# Variables
# Logo key = Mod4. Use Mod1 for Alt.
set $mod Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty --config-file ~/.config/alacritty/alacritty.toml
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi -S drun,run

# Output configuration
# Set wallpaper
output * bg $(find ~/.wallpaper -type f | shuf -n 1) fill

# Lockscreen configuration
set $screenlock 'swaylock -f -c 000000'

# Enable common options for generic touchpads
input "type:touchpad" {
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
}

# Cycle through workspaces
bindsym $mod+tab workspace next_on_output
bindsym $mod+Shift+tab workspace prev_on_output

bindsym --to-code {
    $mod+b splith
    $mod+v splitv
}

# Floatings
for_window [title="Picture-in-Picture"] floating enable

# Key bindings
# Basics:
# Start a terminal
bindsym $mod+Return exec $$term
# Kill focused window
bindsym $mod+Shift+q kill
# Start your launcher
bindsym $mod+d exec $menu
# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal
# Reload the configuration file
bindsym $mod+Shift+c reload

# Moving around:
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


# Layout stuff:
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Media keys
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl -q set 5%- && ( echo $((`brightnessctl get` * 100 / `brightnessctl m`)) > $SWAYSOCK.wob )
bindsym XF86MonBrightnessUp exec brightnessctl -q set +5% && ( echo $((`brightnessctl get` * 100 / `brightnessctl m`)) > $SWAYSOCK.wob )
bindsym XF86AudioRaiseVolume exec pamixer --allow-boost -ui 2 && dc -e "[`pamixer --get-volume`]sM 100d `pamixer --get-volume`<Mp" > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec pamixer --allow-boost -ud 2 && dc -e "[`pamixer --get-volume`]sM 100d `pamixer --get-volume`<Mp" > $SWAYSOCK.wob
bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob )

# Media player controls
bindsym --no-warn XF86AudioPlay exec playerctl play-pause
bindsym --no-warn XF86AudioNext exec playerctl next
bindsym --no-warn XF86AudioPrev exec playerctl previous

# Status Bar:
bar {
   swaybar_command waybar 
}

# System mode menu
set $mode_system "What to do? (l) lock, (e) logout, (r) reboot, (s) suspend, (Shift+s) shutdown"
mode $mode_system {
	bindsym l exec $screenlock; mode "default"
	bindsym e exec swaymsg exit; mode "default"
	bindsym r exec systemctl reboot; mode "default"
	#bindsym s exec "swaylock & systemctl suspend"; mode "default"
	bindsym s exec $screenlock & systemctl suspend; mode "default"
	bindsym Shift+s exec systemctl poweroff; mode "default"

	# back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode $mode_system

# Toggle notification bar
set $toggle_notification "swaync-client -t -sw"
bindsym $mod+Shift+n exec $toggle_notification

font Source Sans pro 11
default_border pixel 3
gaps inner 10
# client.focused #6da741 #173f4f #73ba25
client.focused #FFFFFF #F0FFFF #000000 #F0FFFF #F0FFFF
client.unfocused #333333 #333333 #FFFFFF
client.focused_inactive #333333 #333333 #FFFFFF #00000000 #00000000

set $wob wob
exec_always {
    systemctl --user import-environment
    gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'
    gsettings set org.gnome.desktop.interface icon-theme 'Adwaita'
    gsettings set org.gnome.desktop.interface cursor-theme 'Adwaita'
    test -e $SWAYSOCK.wob || mkfifo $SWAYSOCK.wob
    tail -f $SWAYSOCK.wob | $wob
    swaync --style /etc/sway/swaync/style.css --config /etc/sway/swaync/config.json
}

exec /usr/libexec/polkit-gnome-authentication-agent-1

input type:keyboard xkb_layout fr
bindsym $mod+ampersand workspace 1
bindsym $mod+eacute workspace 2
bindsym $mod+quotedbl workspace 3
bindsym $mod+apostrophe workspace 4
bindsym $mod+parenleft workspace 5
bindsym $mod+minus workspace 6
bindsym $mod+egrave workspace 7
bindsym $mod+underscore workspace 8
bindsym $mod+ccedilla workspace 9
bindsym $mod+agrave workspace 10
bindsym $mod+Shift+ampersand move container to workspace 1
bindsym $mod+Shift+eacute move container to workspace 2
bindsym $mod+Shift+quotedbl move container to workspace 3
bindsym $mod+Shift+apostrophe move container to workspace 4
bindsym $mod+Shift+parenleft move container to workspace 5
bindsym $mod+Shift+minus move container to workspace 6
bindsym $mod+Shift+egrave move container to workspace 7
bindsym $mod+Shift+underscore move container to workspace 8
bindsym $mod+Shift+ccedilla move container to workspace 9
bindsym $mod+Shift+agrave move container to workspace 10
bindsym $mod+Shift+parenright move scratchpad
bindsym $mod+parenright scratchpad show

input "1:1:AT_Translated_Set_2_keyboard" xkb_layout us
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+1 workspace number 1
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+2 workspace number 2
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+3 workspace number 3
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+4 workspace number 4
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+5 workspace number 5
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+6 workspace number 6
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+7 workspace number 7
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+8 workspace number 8
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+9 workspace number 9
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+0 workspace number 10
# Move focused container to workspace
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+1 move container to workspace number 1
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+2 move container to workspace number 2
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+3 move container to workspace number 3
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+4 move container to workspace number 4
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+5 move container to workspace number 5
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+6 move container to workspace number 6
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+7 move container to workspace number 7
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+8 move container to workspace number 8
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+9 move container to workspace number 9
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+0 move container to workspace number 10
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+Shift+minus move scratchpad
bindsym --input-device=1:1:AT_Translated_Set_2_keyboard $mod+minus scratchpad show
